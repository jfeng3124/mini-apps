const express = require('express');
const app = express();
const path = require('path');
const bodyParser = require('body-parser');
const MongoClient = require('mongodb').MongoClient;
const port = 3030;
const url = "mongodb://localhost:27017/";

app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(express.static('public'));

app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'index.html'));
  res.status(200);
});

app.post('/', (req, res) => {
  console.log(req.body);
  MongoClient.connect(url, (err, db) => {
    if (err) throw err;
    useNewUrlParser = true;
    var purchase = db.db('purchase');
    purchase.collection('purchases').insertOne(req.body, err => {
      if (err) throw err;
      db.close();
      res.status(201);
      console.log('successfully inserted');
    });
  });
});

app.listen(port, () => console.log(`Port is running on ${port}!`));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImFwcCIsInBhdGgiLCJib2R5UGFyc2VyIiwiTW9uZ29DbGllbnQiLCJwb3J0IiwidXJsIiwiZXh0ZW5kZWQiLCJyZXMiLCJjb25zb2xlIiwicmVxIiwidXNlTmV3VXJsUGFyc2VyIiwicHVyY2hhc2UiLCJkYiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsVUFBVUMsUUFBaEIsU0FBZ0JBLENBQWhCO0FBQ0EsTUFBTUMsTUFBTixTQUFBO0FBQ0EsTUFBTUMsT0FBT0YsUUFBYixNQUFhQSxDQUFiO0FBQ0EsTUFBTUcsYUFBYUgsUUFBbkIsYUFBbUJBLENBQW5CO0FBQ0EsTUFBTUksY0FBY0osUUFBQUEsU0FBQUEsRUFBcEIsV0FBQTtBQUNBLE1BQU1LLE9BQU4sSUFBQTtBQUNBLE1BQU1DLE1BQU4sNEJBQUE7O0FBRUFMLElBQUFBLEdBQUFBLENBQVFFLFdBQVJGLElBQVFFLEVBQVJGO0FBQ0FBLElBQUFBLEdBQUFBLENBQVFFLFdBQUFBLFVBQUFBLENBQXNCLEVBQUNJLFVBQS9CTixLQUE4QixFQUF0QkUsQ0FBUkY7QUFDQUEsSUFBQUEsR0FBQUEsQ0FBUUYsUUFBQUEsTUFBQUEsQ0FBUkUsUUFBUUYsQ0FBUkU7O0FBRUFBLElBQUFBLEdBQUFBLENBQUFBLEdBQUFBLEVBQWEsQ0FBQSxHQUFBLEVBQUEsR0FBQSxLQUFjO0FBQ3pCTyxNQUFBQSxRQUFBQSxDQUFhTixLQUFBQSxJQUFBQSxDQUFBQSxTQUFBQSxFQUFiTSxZQUFhTixDQUFiTTtBQUNBQSxNQUFBQSxNQUFBQSxDQUFBQSxHQUFBQTtBQUZGUCxDQUFBQTs7QUFLQUEsSUFBQUEsSUFBQUEsQ0FBQUEsR0FBQUEsRUFBYyxDQUFBLEdBQUEsRUFBQSxHQUFBLEtBQWM7QUFDMUJRLFVBQUFBLEdBQUFBLENBQVlDLElBQVpELElBQUFBO0FBQ0FMLGNBQUFBLE9BQUFBLENBQUFBLEdBQUFBLEVBQXlCLENBQUEsR0FBQSxFQUFBLEVBQUEsS0FBYTtBQUNwQyxRQUFBLEdBQUEsRUFBUyxNQUFBLEdBQUE7QUFDVE8sc0JBQUFBLElBQUFBO0FBQ0EsUUFBSUMsV0FBV0MsR0FBQUEsRUFBQUEsQ0FBZixVQUFlQSxDQUFmO0FBQ0FELGFBQUFBLFVBQUFBLENBQUFBLFdBQUFBLEVBQUFBLFNBQUFBLENBQTJDRixJQUEzQ0UsSUFBQUEsRUFBcUQsT0FBUztBQUM1RCxVQUFBLEdBQUEsRUFBUyxNQUFBLEdBQUE7QUFDVEMsU0FBQUEsS0FBQUE7QUFDQUwsVUFBQUEsTUFBQUEsQ0FBQUEsR0FBQUE7QUFDQUMsY0FBQUEsR0FBQUEsQ0FBQUEsdUJBQUFBO0FBSkZHLEtBQUFBO0FBSkZSLEdBQUFBO0FBRkZILENBQUFBOztBQWVBQSxJQUFBQSxNQUFBQSxDQUFBQSxJQUFBQSxFQUFpQixNQUFPUSxRQUFBQSxHQUFBQSxDQUFhLHNCQUFxQkosSUFBMURKLEdBQXdCUSxDQUF4QlIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xuY29uc3QgTW9uZ29DbGllbnQgPSByZXF1aXJlKCdtb25nb2RiJykuTW9uZ29DbGllbnQ7XG5jb25zdCBwb3J0ID0gMzAzMDtcbmNvbnN0IHVybCA9IFwibW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxNy9cIjtcblxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7ZXh0ZW5kZWQ6IGZhbHNlfSkpXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKCdwdWJsaWMnKSk7XG5cbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcbiAgcmVzLnNlbmRGaWxlKHBhdGguam9pbihfX2Rpcm5hbWUsICdpbmRleC5odG1sJykpO1xuICByZXMuc3RhdHVzKDIwMCk7XG59KVxuXG5hcHAucG9zdCgnLycsIChyZXEsIHJlcykgPT4ge1xuICBjb25zb2xlLmxvZyhyZXEuYm9keSlcbiAgTW9uZ29DbGllbnQuY29ubmVjdCh1cmwsIChlcnIsIGRiKSA9PiB7XG4gICAgaWYgKGVycikgdGhyb3cgZXJyO1xuICAgIHVzZU5ld1VybFBhcnNlciA9IHRydWU7XG4gICAgdmFyIHB1cmNoYXNlID0gZGIuZGIoJ3B1cmNoYXNlJyk7XG4gICAgcHVyY2hhc2UuY29sbGVjdGlvbigncHVyY2hhc2VzJykuaW5zZXJ0T25lKHJlcS5ib2R5LCAoZXJyKSA9PiB7XG4gICAgICBpZiAoZXJyKSB0aHJvdyBlcnI7XG4gICAgICBkYi5jbG9zZSgpO1xuICAgICAgcmVzLnN0YXR1cygyMDEpO1xuICAgICAgY29uc29sZS5sb2coJ3N1Y2Nlc3NmdWxseSBpbnNlcnRlZCcpO1xuICAgIH0pXG4gIH0pXG59KVxuXG5hcHAubGlzdGVuKHBvcnQsICgpID0+ICBjb25zb2xlLmxvZyhgUG9ydCBpcyBydW5uaW5nIG9uICR7cG9ydH0hYCkpIl19