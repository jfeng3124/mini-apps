class App extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      flow: [Checkout, FormOne, FormTwo, FormThree, Summary],
      currentView: Checkout,
      currentForm: {}
    };
  }

  handleNext() {
    this.setState({
      currentView: this.state.flow[this.state.flow.indexOf(this.state.currentView) + 1 || 0]
    });
  }

  handleSubmit() {}

  handleFormChange(e) {
    let value = e.target.value;
    let newForm = this.state.currentForm;
    newForm[e.target.name] = value;
    this.setState({
      currentForm: newForm
    });
  }

  render() {
    return React.createElement("div", { id: "container" }, React.createElement(this.state.currentView, { onChange: e => this.handleFormChange(e), onClick: e => this.handleNext(e) }));
  }
}

const Checkout = props => React.createElement("button", { onClick: props.onClick }, "Checkout");

const FormOne = props => React.createElement("div", { id: "formOne" }, React.createElement("form", null, " Account Information ", React.createElement("br", null), React.createElement("input", { type: "text", name: "name", placeholder: "Name", id: "name", onChange: props.onChange }), React.createElement("input", { type: "email", name: "email", placeholder: "Email", id: "email", onChange: props.onChange }), React.createElement("input", { type: "password", name: "password", placeholder: "Password", id: "password", onChange: props.onChange }), React.createElement("input", { type: "submit", value: "Next", onClick: props.onClick })));

const FormTwo = props => React.createElement("div", { id: "formTwo" }, React.createElement("form", null, " Shipping Information ", React.createElement("br", null), React.createElement("input", { type: "text", name: "firstLine", id: "firstLine", onChange: props.onChange }), React.createElement("input", { type: "text", name: "secondLine", id: "secondLine", onChange: props.onChange }), React.createElement("input", { type: "text", name: "city", placeholder: "enter your city", id: "city", onChange: props.onChange }), React.createElement("input", { type: "text", name: "state", placeholder: "enter your state", id: "state", onChange: props.onChange }), React.createElement("input", { type: "text", name: "zipcode", placeholder: "enter your zipcode", id: "zipcode", onChange: props.onChange }), React.createElement("input", { type: "submit", value: "Next", onClick: props.onClick })));

const FormThree = props => React.createElement("div", { id: "formThree" }, React.createElement("form", null, " Credit Card Confirmation ", React.createElement("br", null), React.createElement("input", { type: "text", name: "creditCard", id: "creditCard", placeholder: "Credit Card Number", onChange: props.onChange }), React.createElement("input", { type: "text", name: "expirationDate", id: "expiration", placeholder: "XX/XX", onChange: props.onChange }), React.createElement("input", { type: "text", name: "CVV", id: "CVV", placeholder: "CVV", onChange: props.onChange }), React.createElement("input", { type: "text", name: "billingZip", id: "billingZip", placeholder: "Zip", onChange: props.onChange }), React.createElement("input", { type: "submit", value: "Next", onClick: props.onClick, onChange: props.onChange })));

ReactDOM.render(React.createElement(App, null), document.getElementById('app'));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,